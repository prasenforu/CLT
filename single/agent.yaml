apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-logs
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-logs
  namespace: monitoring
data:
  agent.yaml: |
    loki:
        configs:
          - clients:
              - url: http://loki.172.31.14.138.nip.io/api/prom/push              
                external_labels:
                  cluster: kube-one
            name: default
            scrape_configs:
              - job_name: kubernetes-pods-name
                kubernetes_sd_configs:
                  - role: pod
                pipeline_stages:
                  - docker: {}
                relabel_configs:
                  - source_labels: [__meta_kubernetes_namespace]
                    regex: default|kube-system
                    action: drop                
                  - source_labels:
                      - __meta_kubernetes_pod_label_name
                    target_label: __service__
                  - source_labels:
                      - __meta_kubernetes_pod_node_name
                    target_label: __host__
                  - action: drop
                    regex: ""
                    source_labels:
                      - __service__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - action: replace
                    replacement: $1
                    separator: /
                    source_labels:
                      - __meta_kubernetes_namespace
                      - __service__
                    target_label: job
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                  - replacement: /var/log/pods/*$1/*.log
                    separator: /
                    source_labels:
                      - __meta_kubernetes_pod_uid
                      - __meta_kubernetes_pod_container_name
                    target_label: __path__
              - job_name: kubernetes-pods-app
                kubernetes_sd_configs:
                  - role: pod
                pipeline_stages:
                  - docker: {}
                relabel_configs:
                  - source_labels: [__meta_kubernetes_namespace]
                    regex: default|kube-system
                    action: drop                
                  - action: drop
                    regex: .+
                    source_labels:
                      - __meta_kubernetes_pod_label_name
                  - source_labels:
                      - __meta_kubernetes_pod_label_app
                    target_label: __service__
                  - source_labels:
                      - __meta_kubernetes_pod_node_name
                    target_label: __host__
                  - action: drop
                    regex: ""
                    source_labels:
                      - __service__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - action: replace
                    replacement: $1
                    separator: /
                    source_labels:
                      - __meta_kubernetes_namespace
                      - __service__
                    target_label: job
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                  - replacement: /var/log/pods/*$1/*.log
                    separator: /
                    source_labels:
                      - __meta_kubernetes_pod_uid
                      - __meta_kubernetes_pod_container_name
                    target_label: __path__
              - job_name: kubernetes-pods-direct-controllers
                kubernetes_sd_configs:
                  - role: pod
                pipeline_stages:
                  - docker: {}
                relabel_configs:
                  - source_labels: [__meta_kubernetes_namespace]
                    regex: default|kube-system
                    action: drop                
                  - action: drop
                    regex: .+
                    separator: ""
                    source_labels:
                      - __meta_kubernetes_pod_label_name
                      - __meta_kubernetes_pod_label_app
                  - action: drop
                    regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
                    source_labels:
                      - __meta_kubernetes_pod_controller_name
                  - source_labels:
                      - __meta_kubernetes_pod_controller_name
                    target_label: __service__
                  - source_labels:
                      - __meta_kubernetes_pod_node_name
                    target_label: __host__
                  - action: drop
                    regex: ""
                    source_labels:
                      - __service__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - action: replace
                    replacement: $1
                    separator: /
                    source_labels:
                      - __meta_kubernetes_namespace
                      - __service__
                    target_label: job
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                  - replacement: /var/log/pods/*$1/*.log
                    separator: /
                    source_labels:
                      - __meta_kubernetes_pod_uid
                      - __meta_kubernetes_pod_container_name
                    target_label: __path__
              - job_name: kubernetes-pods-indirect-controller
                kubernetes_sd_configs:
                  - role: pod
                pipeline_stages:
                  - docker: {}
                relabel_configs:
                  - source_labels: [__meta_kubernetes_namespace]
                    regex: default|kube-system
                    action: drop                
                  - action: drop
                    regex: .+
                    separator: ""
                    source_labels:
                      - __meta_kubernetes_pod_label_name
                      - __meta_kubernetes_pod_label_app
                  - action: keep
                    regex: '[0-9a-z-.]+-[0-9a-f]{8,10}'
                    source_labels:
                      - __meta_kubernetes_pod_controller_name
                  - action: replace
                    regex: ([0-9a-z-.]+)-[0-9a-f]{8,10}
                    source_labels:
                      - __meta_kubernetes_pod_controller_name
                    target_label: __service__
                  - source_labels:
                      - __meta_kubernetes_pod_node_name
                    target_label: __host__
                  - action: drop
                    regex: ""
                    source_labels:
                      - __service__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - action: replace
                    replacement: $1
                    separator: /
                    source_labels:
                      - __meta_kubernetes_namespace
                      - __service__
                    target_label: job
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                  - replacement: /var/log/pods/*$1/*.log
                    separator: /
                    source_labels:
                      - __meta_kubernetes_pod_uid
                      - __meta_kubernetes_pod_container_name
                    target_label: __path__
              - job_name: kubernetes-pods-static
                kubernetes_sd_configs:
                  - role: pod
                pipeline_stages:
                  - docker: {}
                relabel_configs:
                  - source_labels: [__meta_kubernetes_namespace]
                    regex: default|kube-system
                    action: drop                
                  - action: drop
                    regex: ""
                    source_labels:
                      - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_label_component
                    target_label: __service__
                  - source_labels:
                      - __meta_kubernetes_pod_node_name
                    target_label: __host__
                  - action: drop
                    regex: ""
                    source_labels:
                      - __service__
                  - action: labelmap
                    regex: __meta_kubernetes_pod_label_(.+)
                  - action: replace
                    replacement: $1
                    separator: /
                    source_labels:
                      - __meta_kubernetes_namespace
                      - __service__
                    target_label: job
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                  - replacement: /var/log/pods/*$1/*.log
                    separator: /
                    source_labels:
                      - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
                      - __meta_kubernetes_pod_container_name
                    target_label: __path__
        positions_directory: /tmp/positions
    server:
        http_listen_port: 8080
        log_level: info
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-logs
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-logs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-logs
subjects:
- kind: ServiceAccount
  name: agent-logs
  namespace: monitoring
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: agent-logs
  namespace: monitoring
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: agent-logs
  template:
    metadata:
      labels:
        name: agent-logs
    spec:
      containers:
      - args:
        - -config.file=/etc/agent/agent.yaml
        command:
        - /bin/agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/agent:v0.16.0
        imagePullPolicy: IfNotPresent
        name: agent
        ports:
        - containerPort: 8080
          name: http-metrics
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/agent
          name: agent-logs
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /etc/machine-id
          name: etcmachineid
          readOnly: true
      serviceAccount: agent-logs
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: agent-logs
        name: agent-logs
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - hostPath:
          path: /etc/machine-id
        name: etcmachineid
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent-traces
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-traces
  namespace: monitoring
data:
  agent.yaml: |
    server:
        http_listen_port: 8080
        log_level: info
    tempo:
        configs:
          - batch:
                send_batch_size: 100
                timeout: 5s
            name: default
            receivers:
                jaeger:
                    protocols:
                        grpc: null
                        thrift_binary: null
                        thrift_compact: null
                        thrift_http: null
                    remote_sampling:
                        insecure: true
                        strategy_file: /etc/agent/strategies.json
                opencensus: null
                otlp:
                    protocols:
                        grpc: null
                        http: null
                zipkin: null
            attributes:
              actions:
              - action: upsert
                key: cluster
                value: kube-one
            remote_write:
              - endpoint: tempo.172.31.14.138.nip.io:443
                insecure_skip_verify: true                
                retry_on_failure:
                    enabled: false
            scrape_configs:
              - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                job_name: kubernetes-pods
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: false
  strategies.json: '{"default_strategy": {"param": 0.001, "type": "probabilistic"}}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent-traces
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent-traces
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-traces
subjects:
- kind: ServiceAccount
  name: agent-traces
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: agent-traces
  name: agent-traces
  namespace: monitoring
spec:
  ports:
  - name: agent-http-metrics
    port: 8080
    targetPort: 8080
  - name: agent-thrift-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: agent-thrift-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: agent-thrift-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: agent-thrift-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: agent-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  - name: agent-otlp
    port: 55680
    protocol: TCP
    targetPort: 55680
  - name: agent-opencensus
    port: 55678
    protocol: TCP
    targetPort: 55678
  selector:
    name: agent-traces
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: agent-traces
  namespace: monitoring
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: agent-traces
  template:
    metadata:
      labels:
        name: agent-traces
    spec:
      containers:
      - args:
        - -config.file=/etc/agent/agent.yaml
        command:
        - /bin/agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/agent:v0.16.0
        imagePullPolicy: IfNotPresent
        name: agent
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 6831
          name: thrift-compact
          protocol: UDP
        - containerPort: 6832
          name: thrift-binary
          protocol: UDP
        - containerPort: 14268
          name: thrift-http
          protocol: TCP
        - containerPort: 14250
          name: thrift-grpc
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        - containerPort: 55680
          name: otlp
          protocol: TCP
        - containerPort: 55678
          name: opencensus
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/agent
          name: agent-traces
      serviceAccount: agent-traces
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: agent-traces
        name: agent-traces
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent
  namespace: monitoring
data:
  agent.yml: |
    prometheus:
        configs:
          - host_filter: true
            name: agent
            remote_write:
              - url: http://cortex.172.31.14.138.nip.io/api/prom/push
            scrape_configs:
              - job_name: kubernetes-pods
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - action: drop
                    regex: "false"
                    source_labels:
                      - __meta_kubernetes_pod_annotation_prometheus_io_scrape
                  - action: keep
                    regex: .*-metrics
                    source_labels:
                      - __meta_kubernetes_pod_container_port_name
                  - action: replace
                    regex: (https?)
                    replacement: $1
                    source_labels:
                      - __meta_kubernetes_pod_annotation_prometheus_io_scheme
                    target_label: __scheme__
                  - action: replace
                    regex: (.+)
                    replacement: $1
                    source_labels:
                      - __meta_kubernetes_pod_annotation_prometheus_io_path
                    target_label: __metrics_path__
                  - action: replace
                    regex: (.+?)(\:\d+)?;(\d+)
                    replacement: $1:$3
                    source_labels:
                      - __address__
                      - __meta_kubernetes_pod_annotation_prometheus_io_port
                    target_label: __address__
                  - action: drop
                    regex: ""
                    source_labels:
                      - __meta_kubernetes_pod_label_name
                  - action: replace
                    replacement: $1
                    separator: /
                    source_labels:
                      - __meta_kubernetes_namespace
                      - __meta_kubernetes_pod_label_name
                    target_label: job
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                  - action: replace
                    separator: ':'
                    source_labels:
                      - __meta_kubernetes_pod_name
                      - __meta_kubernetes_pod_container_name
                      - __meta_kubernetes_pod_container_port_name
                    target_label: instance
                  - action: labelmap
                    regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                    replacement: __param_$1
                  - action: drop
                    regex: Succeeded|Failed
                    source_labels:
                      - __meta_kubernetes_pod_phase
              - job_name: kube-state-metrics
                kubernetes_sd_configs:
                  - namespaces:
                        names:
                          - monitoring
                    role: service
                relabel_configs:
                  - separator: ;
                    regex: __meta_kubernetes_service_label_(.+)
                    replacement: $1
                    action: labelmap
                  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_label_k8s_app]
                    separator: ;
                    regex: monitoring;kube-state-metrics
                    replacement: $1
                    action: keep
              - job_name: node-exporter
                kubernetes_sd_configs:
                  - namespaces:
                        names:
                          - monitoring
                    role: pod
                relabel_configs:
                  - separator: ;
                    regex: __meta_kubernetes_pod_label_(.+)
                    replacement: $1
                    action: labelmap
                  - source_labels: [__address__]
                    separator: ;
                    regex: ([^:]+)(?::\d+)?
                    target_label: __address__
                    replacement: $1:9100
                    action: replace
                  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_k8s_app]
                    separator: ;
                    regex: monitoring;node-exporter
                    replacement: $1
                    action: keep
                  - source_labels: [__meta_kubernetes_namespace]
                    separator: ;
                    regex: (.*)
                    target_label: namespace
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_name]
                    separator: ;
                    regex: (.*)
                    target_label: pod
                    replacement: $1
                    action: replace
                  - source_labels: [__meta_kubernetes_pod_node_name]
                    separator: ;
                    regex: (.*)
                    target_label: instance
                    replacement: $1
                    action: replace
              - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                job_name: kubelet
                kubernetes_sd_configs:
                  - role: node
                relabel_configs:
                  - replacement: kubernetes.default.svc.cluster.local:443
                    target_label: __address__
                  - replacement: https
                    target_label: __scheme__
                  - regex: (.+)
                    replacement: /api/v1/nodes/${1}/proxy/metrics
                    source_labels:
                      - __meta_kubernetes_node_name
                    target_label: __metrics_path__
                tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: false
              - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                job_name: cadvisor
                metrics_path: /metrics/cadvisor                
                kubernetes_sd_configs:
                  - role: node
                metric_relabel_configs:
                  - action: drop
                    regex: container_([a-z_]+);
                    source_labels:
                      - __name__
                      - image
                  - action: drop
                    regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
                    source_labels:
                      - __name__
                relabel_configs:
                  - replacement: kubernetes.default.svc.cluster.local:443
                    target_label: __address__
                  - regex: (.+)
                    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
                    source_labels:
                      - __meta_kubernetes_node_name
                    target_label: __metrics_path__
                scheme: https
                tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: false
        global:
            scrape_interval: 15s
            external_labels:
              cluster: kube-one
        wal_directory: /var/lib/agent/data
    server:
        log_level: info
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-deployment
  namespace: monitoring
data:
  agent.yml: |
    prometheus:
        configs:
          - host_filter: false
            name: agent
            remote_write:
              - url: http://cortex.172.31.14.138.nip.io/api/prom/push
            scrape_configs:
              - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                job_name: kubernetes
                kubernetes_sd_configs:
                  - role: endpoints
                metric_relabel_configs:
                  - action: keep
                    regex: workqueue_queue_duration_seconds_bucket|process_cpu_seconds_total|process_resident_memory_bytes|workqueue_depth|rest_client_request_duration_seconds_bucket|workqueue_adds_total|up|rest_client_requests_total|apiserver_request_total|go_goroutines
                    source_labels:
                      - __name__
                relabel_configs:
                  - action: keep
                    regex: apiserver
                    source_labels:
                      - __meta_kubernetes_service_label_component
                scheme: https
                tls_config:
                    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                    insecure_skip_verify: false
                    server_name: kubernetes
        global:
            scrape_interval: 15s
            external_labels:
              cluster: kube-one  
        wal_directory: /var/lib/agent/data
    server:
        log_level: info
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: agent
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  - /metrics/cadvisor
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent
subjects:
- kind: ServiceAccount
  name: agent
  namespace: monitoring
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: agent
  namespace: monitoring
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: agent
  template:
    metadata:
      labels:
        name: agent
    spec:
      containers:
      - args:
        - -config.file=/etc/agent/agent.yml
        - -prometheus.wal-directory=/tmp/agent/data
        command:
        - /bin/agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/agent:v0.16.0
        imagePullPolicy: IfNotPresent
        name: agent
        ports:
        - containerPort: 80
          name: http-metrics
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/agent
          name: agent
      serviceAccount: agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: agent
        name: agent
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-deployment
  namespace: monitoring
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: agent-deployment
  template:
    metadata:
      labels:
        name: agent-deployment
    spec:
      containers:
      - args:
        - -config.file=/etc/agent/agent.yml
        - -prometheus.wal-directory=/tmp/agent/data
        command:
        - /bin/agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/agent:v0.16.0
        imagePullPolicy: IfNotPresent
        name: agent
        ports:
        - containerPort: 80
          name: http-metrics
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/agent
          name: agent-deployment
      serviceAccount: agent
      volumes:
      - configMap:
          name: agent-deployment
        name: agent-deployment
